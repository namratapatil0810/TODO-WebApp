{"ast":null,"code":"var _jsxFileName = \"D:\\\\TODO\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      Items: [],\n      value: \"\",\n      count: 1\n    };\n\n    this.onAddItem = () => {\n      let newItem = {\n        id: this.state.count,\n        name: this.state.value\n      };\n      let updatedItems = [...this.state.Items, newItem];\n      let id = this.state.count + 1;\n      this.setState({\n        Items: updatedItems,\n        value: \"\",\n        count: id\n      });\n    };\n\n    this.onEdit = (OBJ, index) => {\n      console.log(index);\n      let idInputList = \"input\";\n      idInputList = idInputList.concat(OBJ.id); //adding input for listItems\n\n      let container = document.getElementById(idInputList);\n      let input = document.createElement(\"input\");\n      input.type = \"text\";\n      input.name = \"listInput\";\n      input.id = \"listInput\";\n      input.className = \"listInput\";\n      input.value = OBJ.name;\n\n      input.onchange = e => {\n        this.onSave(e, index, OBJ.id);\n      };\n\n      container.appendChild(input); //hiding listItem\n\n      let idList = \"list\";\n      idList = idList.concat(OBJ.id);\n      let list = document.getElementById(idList);\n      list.className = \"hide\";\n    };\n\n    this.onSave = (data, index, id) => {\n      let updatedItems = this.state.Items;\n      let newItem = {\n        id: id,\n        name: data.target.value\n      };\n      updatedItems.splice(index, 1, newItem);\n      console.log(updatedItems);\n      this.setState({\n        Items: updatedItems\n      }); //displaying listItem\n\n      let idList = \"list\";\n      idList = idList.concat(id);\n      let list = document.getElementById(idList);\n      list.classList.remove(\"hide\"); //removing iput for lists\n\n      let lstInput = document.getElementById(\"listInput\");\n      lstInput.parentNode.removeChild(lstInput);\n    };\n\n    this.onDelete = index => {\n      let updatedItems = this.state.Items;\n      updatedItems.splice(index, 1);\n      console.log(updatedItems);\n      this.setState({\n        Items: updatedItems\n      });\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        value: e.target.value\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"txtInput\",\n      name: \"listitem\",\n      value: this.state.value,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"btn\",\n      onClick: this.onAddItem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"Add\")), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, this.state.Items.map((OBJ, index) => {\n      let idList = \"list\";\n      idList = idList.concat(OBJ.id);\n      let idInputList = \"input\";\n      idInputList = idInputList.concat(OBJ.id);\n      let idButton = \"btn\";\n      idButton = idButton.concat(OBJ.id);\n      return React.createElement(\"div\", {\n        className: \"item-view\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        id: idList,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, OBJ.name, \"|\", OBJ.id), React.createElement(\"div\", {\n        id: idInputList,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        id: idButton,\n        className: \"extra-btn\",\n        onClick: () => this.onEdit(OBJ, index),\n        onDoubleClick: () => this.onEdit(OBJ, index),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \"Edit\"), React.createElement(\"button\", {\n        className: \"extra-btn\",\n        onClick: () => this.onDelete(index),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, \"Delete\"));\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["D:\\TODO\\src\\App.js"],"names":["React","Component","App","state","Items","value","count","onAddItem","newItem","id","name","updatedItems","setState","onEdit","OBJ","index","console","log","idInputList","concat","container","document","getElementById","input","createElement","type","className","onchange","e","onSave","appendChild","idList","list","data","target","splice","classList","remove","lstInput","parentNode","removeChild","onDelete","handleChange","render","map","idButton"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    Items: [],\r\n    value: \"\",\r\n    count: 1\r\n  };\r\n\r\n  onAddItem = () => {\r\n    let newItem = { id: this.state.count, name: this.state.value };\r\n    let updatedItems = [...this.state.Items, newItem];\r\n    let id = this.state.count + 1;\r\n    this.setState({ Items: updatedItems, value: \"\", count: id });\r\n  };\r\n\r\n  onEdit = (OBJ, index) => {\r\n    console.log(index);\r\n    let idInputList = \"input\";\r\n    idInputList = idInputList.concat(OBJ.id);\r\n\r\n    //adding input for listItems\r\n    let container = document.getElementById(idInputList);\r\n    let input = document.createElement(\"input\");\r\n    input.type = \"text\";\r\n    input.name = \"listInput\";\r\n    input.id = \"listInput\";\r\n    input.className = \"listInput\";\r\n    input.value = OBJ.name;\r\n    input.onchange = e => {\r\n      this.onSave(e, index, OBJ.id);\r\n    };\r\n    container.appendChild(input);\r\n\r\n    //hiding listItem\r\n    let idList = \"list\";\r\n    idList = idList.concat(OBJ.id);\r\n    let list = document.getElementById(idList);\r\n    list.className = \"hide\";\r\n  };\r\n\r\n  onSave = (data, index, id) => {\r\n    let updatedItems = this.state.Items;\r\n    let newItem = { id: id, name: data.target.value };\r\n    updatedItems.splice(index, 1, newItem);\r\n    console.log(updatedItems);\r\n    this.setState({ Items: updatedItems });\r\n\r\n    //displaying listItem\r\n    let idList = \"list\";\r\n    idList = idList.concat(id);\r\n    let list = document.getElementById(idList);\r\n    list.classList.remove(\"hide\");\r\n\r\n    //removing iput for lists\r\n    let lstInput = document.getElementById(\"listInput\");\r\n    lstInput.parentNode.removeChild(lstInput);\r\n  };\r\n\r\n  onDelete = index => {\r\n    let updatedItems = this.state.Items;\r\n    updatedItems.splice(index, 1);\r\n    console.log(updatedItems);\r\n    this.setState({ Items: updatedItems });\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({ value: e.target.value });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <div>\r\n          <input\r\n            className=\"txtInput\"\r\n            name=\"listitem\"\r\n            value={this.state.value}\r\n            onChange={this.handleChange}\r\n          />\r\n          <button className=\"btn\" onClick={this.onAddItem}>\r\n            Add\r\n          </button>\r\n        </div>\r\n\r\n        <ul>\r\n          {this.state.Items.map((OBJ, index) => {\r\n            let idList = \"list\";\r\n            idList = idList.concat(OBJ.id);\r\n            let idInputList = \"input\";\r\n            idInputList = idInputList.concat(OBJ.id);\r\n            let idButton = \"btn\";\r\n            idButton = idButton.concat(OBJ.id);\r\n            return (\r\n              <div className=\"item-view\">\r\n                <li id={idList}>\r\n                  {OBJ.name}|{OBJ.id}\r\n                </li>\r\n                <div id={idInputList} />\r\n                <button\r\n                  id={idButton}\r\n                  className=\"extra-btn\"\r\n                  onClick={() => this.onEdit(OBJ, index)}\r\n                  onDoubleClick={() => this.onEdit(OBJ, index)}\r\n                >\r\n                  Edit\r\n                </button>\r\n                <button\r\n                  className=\"extra-btn\"\r\n                  onClick={() => this.onDelete(index)}\r\n                >\r\n                  Delete\r\n                </button>\r\n              </div>\r\n            );\r\n          })}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}